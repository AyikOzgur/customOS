#!/bin/sh

# User-defined variables
export ARCH=<set your architecture, e.g., arm or arm64>
export CROSS_COMPILE=<set your cross-compiler prefix, e.g., arm-linux-gnueabihf- or aarch64-linux-gnu->

# Kernel source code path
linuxPath=<Enter kernel source code path>
cd $linuxPath

# Clean previous builds
make -j$(nproc) ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE clean

# Prepare default configuration
if [ "$ARCH" = "arm" ]; then
    KERNEL=kernel7
    DEFCONFIG=bcm2709_defconfig
elif [ "$ARCH" = "arm64" ]; then
    KERNEL=kernel8
    DEFCONFIG=bcm2711_defconfig
else
    echo "Unsupported architecture: $ARCH"
    exit 1
fi

make -j$(nproc) ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE $DEFCONFIG

# Enable Realtek RTL8152/RTL8153 Based USB Ethernet Adapters
scripts/config --enable CONFIG_USB_RTL8152
# Enable USB RTL8150 based ethernet device support
scripts/config --enable CONFIG_USB_RTL8150

# Uncomment the following line to configure the kernel manually
# make -j$(nproc) ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE menuconfig

# Compile kernel, modules, and device tree blobs
make -j$(nproc) ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE zImage modules dtbs

# Prepare mounting directories
sudo rm -rf mnt
mkdir -p mnt/fat32 mnt/ext4

# Mount partitions
sudo mount /dev/sda1 mnt/fat32
sudo mount /dev/sda2 mnt/ext4

# Install modules
sudo env PATH=$PATH make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE INSTALL_MOD_PATH=mnt/ext4 modules_install

# Copy compiled kernel and device tree blobs
sudo cp arch/$ARCH/boot/zImage mnt/fat32/$KERNEL.img
sudo cp arch/$ARCH/boot/dts/*.dtb mnt/fat32/
sudo cp arch/$ARCH/boot/dts/overlays/*.dtb* mnt/fat32/overlays/
sudo cp arch/$ARCH/boot/dts/overlays/README mnt/fat32/overlays/

# Unmount partitions
sudo umount mnt/fat32
sudo umount mnt/ext4
